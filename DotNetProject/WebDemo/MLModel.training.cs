﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace WebDemo
{
    public partial class MLModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"fixed acidity", @"fixed acidity"),new InputOutputColumnPair(@"volatile acidity", @"volatile acidity"),new InputOutputColumnPair(@"citric acid", @"citric acid"),new InputOutputColumnPair(@"residual sugar", @"residual sugar"),new InputOutputColumnPair(@"chlorides", @"chlorides"),new InputOutputColumnPair(@"free sulfur dioxide", @"free sulfur dioxide"),new InputOutputColumnPair(@"total sulfur dioxide", @"total sulfur dioxide"),new InputOutputColumnPair(@"density", @"density"),new InputOutputColumnPair(@"pH", @"pH"),new InputOutputColumnPair(@"sulphates", @"sulphates"),new InputOutputColumnPair(@"alcohol", @"alcohol")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"fixed acidity",@"volatile acidity",@"citric acid",@"residual sugar",@"chlorides",@"free sulfur dioxide",@"total sulfur dioxide",@"density",@"pH",@"sulphates",@"alcohol"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=6,MinimumExampleCountPerLeaf=99,NumberOfIterations=63,MaximumBinCountPerFeature=946,LearningRate=1F,LabelColumnName=@"quality",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.554704640400417F,FeatureFraction=0.825527310116115F,L1Regularization=1.45419038116135E-07F,L2Regularization=3.08876495222331E-07F}}));

            return pipeline;
        }
    }
}
